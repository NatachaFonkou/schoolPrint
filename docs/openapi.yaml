openapi: 3.0.0
info:
  title: ORG Service API
  description: API documentation for the ORG service
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /orgs:
    get:
      summary: Get all organizations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
    post:
      summary: Create a new organization
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '201':
          description: Organization created successfully
  /orgs/{id}/members/count:
    get:
      summary: Get the number of members in an organization
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The number of members
          content:
            application/json:
              schema:
                type: integer
  /orgs/{id}/members:
    get:
      summary: Get members of an organization
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
        - name: first
          in: query
          schema:
            type: integer
            format: int32
        - name: max
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
  /orgs/{id}/members/{memberId}/composite-role:
    post:
      summary: Assign a role to a member
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
      responses:
        '200':
          description: Role assigned successfully
  /orgs/count:
    get:
      summary: Get the number of organizations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The number of organizations
          content:
            application/json:
              schema:
                type: integer
  /orgs/{id}/invitations:
    post:
      summary: Create an invitation
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                role:
                  type: string
      responses:
        '201':
          description: Invitation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
    get:
      summary: Get all invitations for an organization
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of invitations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invitation'
    delete:
      summary: Delete an invitation by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: invitationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Invitation deleted successfully
  /orgs/current:
    get:
      summary: Get my current organization
      security:
        - bearerAuth: []
      responses:
        '200':
          description: My organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyOrganization'
  /orgs/me:
    get:
      summary: Get all organizations for the current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
  /orgs/{id}:
    get:
      summary: Get an organization by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    put:
        summary: Update an organization by ID
        security:
        - bearerAuth: []
        parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        responses:
          '200':
            description: Organization updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Organization'
    delete:
      summary: Delete an organization by ID
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Organization deleted successfully
  
  /orgs/{id}/composite-roles:
    get:
      summary: Get composite roles for an organization
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of composite roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeRole'
    post:
      summary: Create a composite role for an organization
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeRole'
      responses:
        '201':
          description: Composite role created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeRole'

components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        url:
          type: string
        domains:
          type: array
          items:
            type: string
    Invitation:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        redirectUri:
          type: string
        role:
          type: string
    Member:
      type: object
      properties:
        username:
          type: string
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time
    MyOrganization:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        url:
          type: string
        roles:
          type: array
          items:
            type: string
    CompositeRole:
      type: object
      properties:
        name:
          type: string
        roles:
          type: array
          items:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT